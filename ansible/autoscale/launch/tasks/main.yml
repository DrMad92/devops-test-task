---
# tasks file for launch
- name: Search for the Ubuntu 18.04 AMI
  ec2_ami_facts:
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    region: "{{ region }}"
    owners: 099720109477
    filters: 
      name: "ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-*"
      architecture: "x86_64"
  register: amis_result

- name: Get latest AMI
  set_fact:
    ami_latest: "{{ amis_result.images | sort(attribute='creation_date') | last }}"

- name: create a new ec2 key pair
  ec2_key:
    name: "keypair"
    state: "present"
    region: "{{region}}"
    aws_access_key: "{{aws_access_key}}"
    aws_secret_key: "{{aws_secret_key}}"
  register: ec2_key

- name: save private key
  copy:
    content: "{{ ec2_key.key.private_key }}" 
    dest: "{{ keypair }}.pem" 
    mode: 0600
  when: ec2_key.changed

- name: ssh security group
  ec2_group:
    name: "ami-template-sgroup"
    description: sg with rule descriptions
    region: "{{region}}"
    aws_access_key: "{{aws_access_key}}"
    aws_secret_key: "{{aws_secret_key}}"
    rules:
      - proto: tcp
        ports:
        - 22
        cidr_ip: 0.0.0.0/0
        rule_desc: allow all on port 80
  register: sg_group

- debug:
    msg: "{{name}}"

- name: Launch new instance
  ec2:
    aws_access_key: "{{aws_access_key}}"
    aws_secret_key: "{{aws_secret_key}}"
    region: "{{ region }}"
    keypair: "{{ keypair }}"
    zone: "{{ zone }}"
    group_id: "{{ sg_group.group_id }}"
    image: "{{ ami_latest.image_id }}"
    instance_type: "{{ instance_type }}"
    instance_tags:
      Name: "{{name}}"
    volumes: "{{ volumes }}"
    wait: yes
  register: ec2


- name: Add new instances to host group
  add_host:
    name: "{{ item.public_dns_name }}"
    groups: "{{ name }}"
    ec2_id: "{{ item.id }}"
  with_items: ec2.instances

- name: Wait for instance to boot
  wait_for:
    host: "{{ item.public_dns_name }}"
    port: 22
    delay: 30
    timeout: 300
    state: started
  with_items: ec2.instances