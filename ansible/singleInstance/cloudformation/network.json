{
    "Resources":{
        "wallesterVPC": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
              "CidrBlock": "10.0.0.0/16",
              "InstanceTenancy": "default",
              "EnableDnsSupport": "true",
              "EnableDnsHostnames": "false",
              "Tags": [
                {
                  "Key": "Name",
                  "Value": "wallesterVPC"
                }
              ]
            }
          },"subnet0": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
              "CidrBlock": "10.0.0.0/24",
              "AvailabilityZone" : {
                "Fn::Select" : [ 
                  "0", 
                  { 
                    "Fn::GetAZs" : "" 
                  } 
                ]
              },
              "VpcId": {
                "Ref": "wallesterVPC"
              },
              "Tags": [
                {
                  "Key": "Name",
                  "Value": "subnet-0"
                }
              ]
            }
          },
          "subnet1": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
              "CidrBlock": "10.0.1.0/24",
              "AvailabilityZone" : {
                "Fn::Select" : [ 
                  "1", 
                  { 
                    "Fn::GetAZs" : "" 
                  } 
                ]
              },
              "VpcId": {
                "Ref": "wallesterVPC"
              },
              "Tags": [
                {
                  "Key": "Name",
                  "Value": "subnet-1"
                }
              ]
            }
          },
          "igw0": {
            "Type": "AWS::EC2::InternetGateway",
            "Properties": {
              "Tags": [
                {
                  "Key": "Name",
                  "Value": "wallester-igw"
                }
              ]
            }
          },
          "dhcpoptions": {
            "Type": "AWS::EC2::DHCPOptions",
            "Properties": {
              "DomainName": { "Fn::Join" : [ "", [ { "Ref" : "AWS::Region" },"compute.internal" ] ] },
              "DomainNameServers": [
                "AmazonProvidedDNS"
              ]
            }
          },
          "networkACL": {
            "Type": "AWS::EC2::NetworkAcl",
            "Properties": {
              "VpcId": {
                "Ref": "wallesterVPC"
              }
            }
          },
          "routerTable1": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
              "VpcId": {
                "Ref": "wallesterVPC"
              },
              "Tags": [
                {
                  "Key": "Name",
                  "Value": "wallester-route"
                }
              ]
            }
          },
          "acl1": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
              "CidrBlock": "0.0.0.0/0",
              "Egress": "true",
              "Protocol": "-1",
              "RuleAction": "allow",
              "RuleNumber": "100",
              "NetworkAclId": {
                "Ref": "networkACL"
              }
            }
          },
          "acl2": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
              "CidrBlock": "0.0.0.0/0",
              "Protocol": "-1",
              "RuleAction": "allow",
              "RuleNumber": "100",
              "NetworkAclId": {
                "Ref": "networkACL"
              }
            }
          },
          "subnetacl1": {
            "Type": "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties": {
              "NetworkAclId": {
                "Ref": "networkACL"
              },
              "SubnetId": {
                "Ref": "subnet0"
              }
            }
          },
          "subnetacl2": {
            "Type": "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties": {
              "NetworkAclId": {
                "Ref": "networkACL"
              },
              "SubnetId": {
                "Ref": "subnet1"
              }
            }
          },
          "gw1": {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "Properties": {
              "VpcId": {
                "Ref": "wallesterVPC"
              },
              "InternetGatewayId": {
                "Ref": "igw0"
              }
            }
          },
          "subnetroute0": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
              "RouteTableId": {
                "Ref": "routerTable1"
              },
              "SubnetId": {
                "Ref": "subnet0"
              }
            }
          },
          "subnetroute1": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
              "RouteTableId": {
                "Ref": "routerTable1"
              },
              "SubnetId": {
                "Ref": "subnet1"
              }
            }
          },
          "route1": {
            "Type": "AWS::EC2::Route",
            "Properties": {
              "DestinationCidrBlock": "0.0.0.0/0",
              "RouteTableId": {
                "Ref": "routerTable1"
              },
              "GatewayId": {
                "Ref": "igw0"
              }
            },
            "DependsOn": "gw1"
          },
          "dchpassoc": {
            "Type": "AWS::EC2::VPCDHCPOptionsAssociation",
            "Properties": {
              "VpcId": {
                "Ref": "wallesterVPC"
              },
              "DhcpOptionsId": {
                "Ref": "dhcpoptions"
              }
            }
          }
    },
    "Outputs":{
        "VPC" : {
            "Description" : "The VPC to use in other stack",
            "Value" :  { "Ref" : "wallesterVPC" },
            "Export" : { "Name" : {"Fn::Sub": "${AWS::StackName}-VPC" }}
        },
        "Subnet0" : {
            "Description" : "The subnet0 to use in other stack",
            "Value" :  { "Ref" : "subnet0" },
            "Export" : { "Name" : {"Fn::Sub": "${AWS::StackName}-subnet0" }}
        },
        "Subnet1":{
            "Description" : "The subnet1 to use in other stack",
            "Value" :  { "Ref" : "subnet1" },
            "Export" : { "Name" : {"Fn::Sub": "${AWS::StackName}-subnet1" }}
        }
    }
}